.gallery {
  background-color: $color-grey-light-1;
  grid-column: full-start / full-end;

  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(
    7,
    5vw
  ); //Could set the row height here, or we could've set the row height of the container. This allows the gallery grid to shrink in height when the window shrinks in width, thus maintaining its aspect ratio
  grid-gap: 1.5rem;
  padding: 1.5rem;
  align-items: center;
  align-content: center;
  justify-content: center;
  justify-items: center;

  &__item {
    //We put each image in a container so we can use object-fit to keep the image inside the grid-cell
    &--1 {
      grid-column: 1 / span 2;
      grid-row: 1 / span 2;
    }

    &--2 {
      grid-column: 3 / span 3;
      grid-row: 1 / span 3;
    }

    &--3 {
      grid-column: 6 / span 1;
      grid-row: 1 / span 2;
    }

    &--4 {
      grid-column: 7 / span 2;
      grid-row: 1 / span 2;

      img {
        height: 8rem;
      }
    }

    &--5 {
      grid-column: 1 / span 2;
      grid-row: 3 / span 3;
    }

    &--6 {
      grid-column: 3 / span 2;
      grid-row: 4 / span 2;
    }

    &--7 {
      grid-column: 5 / span 1;
      grid-row: 4 / span 1;
    }

    &--8 {
      grid-column: 6 / span 2;
      grid-row: 3 / span 2;
    }

    &--9 {
      grid-column: 8 / span 1;
      grid-row: 3 / span 3;
    }

    &--10 {
      grid-column: 1 / span 1;
      grid-row: 6 / span 2;
    }

    &--11 {
      grid-column: 2 / span 2;
      grid-row: 6 / span 2;
    }

    &--12 {
      grid-column: 4 / span 1;
      grid-row: 6 / span 2;
    }

    &--13 {
      grid-column: 5 / span 3;
      grid-row: 5 / span 3;
    }

    &--14 {
      grid-column: 8 / span 1;
      grid-row: 6 / span 2;
    }
  }

  &__img {
    font-size: 5rem;
    color: purple;
  }
}
